{"version":3,"sources":["components/card/card.component.tsx","components/card-list/card-list.component.tsx","components/search-box/search-box.component.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Card","props","className","src","character","id","alt","name","email","CardList","characters","map","char","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","handleChangeNonArrow","bind","fetch","then","response","json","users","this","filteredCharacters","filter","f","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAIaA,EAAO,SAACC,GACpB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAG,+BAA0BF,EAAMG,UAAUC,GAA1C,0BACHC,IAAI,kBAEL,6BAAKL,EAAMG,UAAUG,OACrB,4BAAIN,EAAMG,UAAUI,YCPVC,G,MAAW,SAACR,GACxB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,WAAWC,KAAI,SAACC,GACtB,OAAO,cAAC,EAAD,CAAoBR,UAAWQ,GAApBA,EAAKP,WCAdQ,G,MAAY,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,aACxC,OACC,uBACCb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCEG,E,kDA1Cd,WAAYjB,GAAgB,IAAD,8BAC1B,cAAMA,IAePc,aAAe,SAACI,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACZd,WAAY,GACZW,YAAa,IAGd,EAAKI,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAPF,E,qDAU3B,WAA2B,IAAD,OACzBC,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKX,SAAS,CAAEV,WAAYqB,S,kCAO/C,SAAqBZ,GACpBa,KAAKZ,SAAS,CAACC,YAAaF,EAAEG,OAAOC,U,oBAGtC,WAAqB,IAAD,EACiBS,KAAKR,MAAjCd,EADW,EACXA,WAAYW,EADD,EACCA,YACdY,EAAqBvB,EAAWwB,QAAO,SAACC,GAC7C,OAAOA,EAAE5B,KAAK6B,cAAcC,SAAShB,EAAYe,kBAElD,OACC,sBAAKlC,UAAU,MAAf,UACC,4CACA,cAAC,EAAD,CACCY,YAAY,wBACZC,aAAciB,KAAKjB,eAEpB,cAAC,EAAD,CAAUL,WAAYuB,W,GArCRK,aCMHC,EAZS,SAAAC,GACnBA,GAAeA,aAAuBC,UACzC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDXO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.59ae623e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { ICardEntry } from '../../definitions/main-defs'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props: ICardEntry) => {\r\n\treturn (\r\n\t\t<div className=\"card-container\">\r\n\t\t\t<img\r\n\t\t\t\tsrc={`https://robohash.org/${props.character.id}?set=set2&size=180x180`}\r\n\t\t\t\talt=\"Character img\"\r\n\t\t\t/>\r\n\t\t\t<h2>{props.character.name}</h2>\r\n\t\t\t<p>{props.character.email}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { IChar } from '../../definitions/main-defs'\r\nimport { Card } from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props: any) => {\r\n\treturn (\r\n\t\t<div className=\"card-list\">\r\n\t\t\t{props.characters.map((char: IChar) => {\r\n\t\t\t\treturn <Card key={char.id} character={char}></Card>\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { ChangeEventHandler } from 'react'\r\n\r\nimport './search-box.styles.css'\r\n\r\ninterface ISearchBox {\r\n  placeholder: string;\r\n  handleChange: ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }: ISearchBox): JSX.Element => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName=\"search\"\r\n\t\t\ttype=\"search\"\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tonChange={handleChange}\r\n\t\t/>\r\n\t)\r\n}\r\n","import './App.css'\r\nimport React, { ChangeEventHandler, Component, ReactNode } from 'react'\r\nimport { CardList } from './components/card-list/card-list.component'\r\nimport { IChar, IProps, IState } from './definitions/main-defs'\r\nimport { SearchBox } from './components/search-box/search-box.component'\r\n\r\nclass App extends Component<IProps, IState> {\r\n\tconstructor(props: IProps) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcharacters: [],\r\n\t\t\tsearchField: '',\r\n\t\t}\r\n\r\n\t\tthis.handleChangeNonArrow = this.handleChangeNonArrow.bind(this)\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((users) => this.setState({ characters: users }))\r\n\t}\r\n\r\n\thandleChange = (e: any): void => {\r\n\t\tthis.setState({searchField: e.target.value})\r\n\t}\r\n\r\n\thandleChangeNonArrow(e: any): void {\r\n\t\tthis.setState({searchField: e.target.value})\r\n\t}\r\n\r\n\trender(): ReactNode {\r\n\t\tconst { characters, searchField } = this.state\r\n\t\tconst filteredCharacters = characters.filter((f: IChar) => {\r\n\t\t\treturn f.name.toLowerCase().includes(searchField.toLowerCase())\r\n\t\t})\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<h1>Characters</h1>\r\n\t\t\t\t<SearchBox\r\n\t\t\t\t\tplaceholder=\"Search for Characters\"\r\n\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<CardList characters={filteredCharacters}></CardList>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry)\r\n\t\t\tgetFID(onPerfEntry)\r\n\t\t\tgetFCP(onPerfEntry)\r\n\t\t\tgetLCP(onPerfEntry)\r\n\t\t\tgetTTFB(onPerfEntry)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default reportWebVitals","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}